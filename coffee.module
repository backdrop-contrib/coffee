<?php

/**
 * Implements hook_perm();
 */
function coffee_permission() {
  return array(
    'access coffee' => array(
      'title' => t('Access Coffee'),
      'description' => t('Access the Coffee search box to navigate fast between admin pages'),
  ),
  );
}

/**
 * Implements hook_menu();
 */

function coffee_menu() {
  $items['admin/coffee/result/%'] = array(
    'title' => 'Coffee Result Handler',
    'page callback' => 'coffee_result_handler',
    'page arguments' => array(3),
    'access arguments' => array('access coffee'),
    'type' => MENU_CALLBACK,
  );
  return $items;

}

/**
 * Handler for Coffee
 *
 * The coffee_result_hanlder will process the input
 * look for matches and returns a json encoded result that is used
 * to display the results.
 *
 * @param
 *    $input is used to build the query
 * @return
 *    json encoded output with results based on the $input
 */

function coffee_result_handler($input = FALSE) {

  if (isset($input) && !empty($input)) {
    $input = urldecode($input);
  }

  // if the input contains slashes drupal see it as multiple arguments.
  // we will glue them together to make the argurments to a string, that will be used in the query
  $arguments = arg();
  if (count($arguments) > 3) {
    $argument_query = array_splice($arguments, 3);
    $input = implode('/', $argument_query);
  }
  else {
    return FALSE;
  }

  $input = check_plain($input);

  // query to search for all link where link_path or link_title like '%$input%'
  $sql = "SELECT link_path, link_title FROM {menu_links} WHERE  (link_path LIKE :input OR link_title LIKE :input)
				AND menu_name = 'management'
				AND link_title <> ''
				AND link_path NOT LIKE '%\%%'
				AND link_path NOT LIKE '%help%'
				ORDER BY link_path, weight";

  $result = db_query_range($sql, 0, 7, array(':input' => '%' . $input . '%'));

  $return = array();
  if (is_object($result)) {

    foreach ($result as $record) {
      $return[] = array('path' => $record->link_path, 'title' => $record->link_title);
    }

    // return is as json, so the javascript can handle it quite well
    $result = drupal_json_encode($return);
    print $result;
    drupal_exit();
  }
  else {
    return FALSE;
  }
}

/**
 * Implements hook_init();
 */
function coffee_init() {
  // only users with the permission access coffee can use coffee
  if (user_access('access coffee')) {
    drupal_add_js(drupal_get_path('module', 'coffee') . '/coffee.js', array('type' => 'file'));
    drupal_add_css(drupal_get_path('module', 'coffee') . '/coffee.css', array('type' => 'file'));
  }
}