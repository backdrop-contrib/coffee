<?php

/**
 * @file
 * Coffee primary module file
 *
 * Implements hook_perm, hook_menu, hook_init
 * and a function to handle the result for Coffee.
 */

/**
 * Implements hook_permission().
 */
function coffee_permission() {
  return array(
    'access coffee' => array(
      'title' => t('Access Coffee'),
      'description' => t('Access the Coffee search box to navigate fast between admin pages'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function coffee_menu() {
  // Define callback for menu structure callback.
  $items['admin/coffee/menu'] = array(
    'title' => t('Coffee Menu Response'),
    'page callback' => 'coffee_get_menu_response',
    'access arguments' => array('access coffee'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_init().
 */
function coffee_init() {
  // Only users with the permission "access coffee" can use Coffee.
  if (user_access('access coffee')) {
    // Add the javascript and css files.
    drupal_add_library('system', 'ui.autocomplete');
    drupal_add_js(drupal_get_path('module', 'coffee') . '/js/coffee.js', array('type' => 'file'));
    drupal_add_css(drupal_get_path('module', 'coffee') . '/css/coffee.css', array('type' => 'file'));
  }
}

/**
 * Implements hook_hook_info().
 */
function coffee_hook_info() {
  $hooks = array(
    'coffee_commands' => array(
      'group' => 'coffee',
    ),
  );

  return $hooks;
}

/**
 * coffee_traverse_below().
 *
 * Helper function to traverse down through a menu structure.
 */
function coffee_traverse_below($link, &$output) {
  $l = isset($link['link']) ? $link['link'] : array();

  // Only add if user has access.
  if (isset($l['access']) && $l['access']) {
    $output[] = array(
      'value' => $l['link_path'],
      'label' => $l['link_title'],
      'command' => NULL,
    );
  }

  if (isset($link['below']) && is_array($link['below'])) {
    foreach ($link['below'] as $below_link) {
      coffee_traverse_below($below_link, $output);
    }
  }
}

/**
 * coffee_get_menu_response().
 *
 * Menu callback function which outputs the menu structure as json ready for
 * populating the autocomplete data source.
 */
function coffee_get_menu_response() {
  global $user, $language;
  $output = array();

  // Get the commands list from the cache if possible.
  $cid = 'coffee_commands:' . $user->uid . ':' . $language->language;
  if ($cache = cache_get($cid)) {
    if (isset($cache->data)) {
      $output = $cache->data;
    }
  }

  // Nothing from cache, rebuild and then cache.
  if (empty($output)) {
    // Grab menu data
    $menu = menu_tree_all_data('management');

    foreach ($menu as $k => $link) {
      coffee_traverse_below($link, $output);
    }

    // Include the commands.
    // Include the default hooks for Coffee.
    module_load_include('inc', 'coffee', 'coffee.hooks');

    // Invoke all implementations of hook_coffee_commands().
    $commands = array();

    foreach (module_implements('coffee_commands') as $module) {
      $commands = array_merge($commands, module_invoke($module, 'coffee_commands', ''));
    }

    if (!empty($commands)) {
      $output = array_merge($output, $commands);
    }

    // Set the cache for this user.
    cache_set($cid, $output, 'cache_coffee');
  }

  drupal_json_output($output);
  drupal_exit();
}
